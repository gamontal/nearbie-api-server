#user  admin;
#Defines which Linux system user will own and run the Nginx server

worker_processes  auto;
#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.

#error_log  logs/error.log; #error_log  logs/error.log  notice;
#Specifies the file where server logs. 

#pid        logs/nginx.pid;
#nginx will write its master process ID(PID).

events {
    worker_connections  1024;
    #worker_processes and worker_connections allows you to calculate maxclients value: 
    #max_clients = worker_processes * worker_connections
}


http {
    # include       mime.types;
    # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

    #default_type  application/json;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    
    #tcp_nopush     on;
    # works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.

    #keepalive_timeout  0;
    keepalive_timeout  65;
    # timeout during which a keep-alive client connection will stay open.

    #gzip  on;
    # tells the server to use on-the-fly gzip compression.
    # NOTE: this is not recommend if data is transfered through a TLS connection
    # SEE: https://en.wikipedia.org/wiki/CRIME
    upstream node-service {
              least_conn;
              server node1:8080 weight=10 max_fails=3 fail_timeout=30s;
              server node2:8080 weight=10 max_fails=3 fail_timeout=30s;
    }

    # HTTPS server
    server {
        #listen       443 ssl;
        listen       80;
        server_name  localhost; # or vps host

        #ssl_certificate      cert.pem;
        #ssl_certificate_key  cert.key;

        #ssl_session_cache    shared:SSL:1m;
        #ssl_session_timeout  5m;

        #ssl_ciphers  HIGH:!aNULL:!MD5;
        #ssl_prefer_server_ciphers  on;

        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_prefer_server_ciphers on;
        #ssl_dhparam /etc/ssl/certs/dhparam.pem;
        #ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        #ssl_session_timeout 1d;
        #ssl_session_cache shared:SSL:50m;
        #ssl_stapling on;
        #ssl_stapling_verify on;
        #add_header Strict-Transport-Security max-age=15768000;

        location / {

          # handle OPTIONS requests
          # NOTE: don't try to DRY out this "if" block, or you're gonna have a bad time.
          # SEE: http://wiki.nginx.org/IfIsEvil
          if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers'     'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
            add_header 'Access-Control-Allow-Methods'     'GET, DELETE, OPTIONS, POST, PUT';
            add_header 'Access-Control-Allow-Origin'      'https://example.com';
            add_header 'Access-Control-Max-Age'           2592000;
            add_header 'Content-Length'                   0;
            add_header 'Content-Type'                     'application/json';
            return 204;
          }

          client_max_body_size 5M;

          proxy_pass http://node-service;
          proxy_redirect off;
          proxy_buffering on;

          # set additional security headers
          add_header 'Cache-Control'                    'no-cache, no-store, must-revalidate';
          add_header 'Content-Security-Policy'          'connect-src example.com';
          add_header 'Expires'                          '0';
          add_header 'Pragma'                           'no-cache';
          add_header 'Strict-Transport-Security'        'max-age=31536000; includeSubDomains';
          add_header 'X-Content-Type-Options'           'nosniff';
          add_header 'X-Frame-Options'                  'DENY';
          add_header 'X-XSS-Protection'                 '1; mode=block';
       }
   }
}